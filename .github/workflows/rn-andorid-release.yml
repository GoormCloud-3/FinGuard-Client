name: RN Android Release

on:
  push:
    tags:
      - "v*"          
  workflow_dispatch:
    inputs:
      version_strategy:
        description: "버전 전략(tag|run)"
        required: false
        default: "tag"
      release_notes:
        description: "릴리즈 노트(선택)"
        required: false
        default: "Automated release build"

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency:
      group: rn-release-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Enable Gradle cache
        uses: gradle/gradle-build-action@v2

      # --- Keystore 복구 ---
      - name: Restore keystore from secret
        run: |
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      - name: Export signing env
        run: |
          echo "ANDROID_KEYSTORE_PATH=$GITHUB_WORKSPACE/android/app/release.keystore" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "ANDROID_SIGNING_KEY_ALIAS=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "ANDROID_SIGNING_KEY_PASSWORD=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}" >> $GITHUB_ENV
          # PKCS12 쓸 때만 필요
          # echo "ANDROID_KEYSTORE_TYPE=pkcs12" >> $GITHUB_ENV

      # --- 버전 전략: tag 우선, 없으면 run_number ---
      - name: Compute version
        id: ver
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"      # v1.2.3
            NAME="${TAG#v}"                     # 1.2.3
            # 1.2.3 -> 10203 형태 + 런넘버 일부 가산(증가 보장)
            CODE=$(echo $NAME | awk -F. '{printf("%d%02d%02d\n",$1,$2,$3)}')
            CODE=$((CODE*100 + ${{ github.run_number }} % 100))
          else
            # 수동 실행 또는 비태그 → run_number 기반
            NAME="0.1.${{ github.run_number }}"
            CODE=$((10000 + $GITHUB_RUN_NUMBER))
          fi
          echo "VERSION_NAME=$NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$CODE" >> $GITHUB_ENV
          echo "version_name=$NAME" >> $GITHUB_OUTPUT
          echo "version_code=$CODE" >> $GITHUB_OUTPUT
          echo "Computed VERSION_NAME=$NAME, VERSION_CODE=$CODE"

      # --- 릴리즈 빌드 (APK) ---
      - name: Build Android (release APK)
        working-directory: android
        run: ./gradlew --no-daemon clean assembleRelease -PVERSION_CODE=$VERSION_CODE -PVERSION_NAME=$VERSION_NAME

      # 산출물 업로드
      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ steps.ver.outputs.version_name }}-${{ steps.ver.outputs.version_code }}
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 14