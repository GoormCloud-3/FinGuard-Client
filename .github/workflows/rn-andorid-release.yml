name: RN Android Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_strategy:
        description: "버전 전략(tag|run)"
        required: false
        default: "tag"
      release_notes:
        description: "릴리즈 노트"
        required: false
        default: "Automated release build"

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency:
      group: rn-release-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install JS deps (root)
        run: npm ci

      - name: Print tree (root)
        run: |
          pwd
          ls -la
          node -v
          npm -v

      - name: Verify RN gradle plugin exists
        run: |
          if [ ! -d "node_modules/@react-native/gradle-plugin" ]; then
            echo "node_modules/@react-native/gradle-plugin 폴더가 없습니다. package.json 위치/설치 위치를 확인하세요."
            exit 1
          fi
          echo "RN gradle plugin found:"
          ls -la node_modules/@react-native/gradle-plugin

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Android SDK만 설치 (패키지 자동설치 안 함)
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 라이선스 수락 + 필요한 패키지 설치
      - name: Accept licenses and install SDK packages
        shell: bash
        env:
          SDKMANAGER: "${ANDROID_HOME}/cmdline-tools/16.0/bin/sdkmanager"
        run: |
          set -e
          echo "ANDROID_HOME=${ANDROID_HOME}"
          echo "Using sdkmanager at: $SDKMANAGER"
          "$SDKMANAGER" --version || true

          # yes | sdkmanager SIGPIPE 방지 (pipefail 잠시 해제) + latest 사용 금지
          set +o pipefail
          yes | "$SDKMANAGER" --licenses || true
          set -o pipefail

          # 필요한 패키지 각각의 인자로 설치
          "$SDKMANAGER" --install \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0" \
            "ndk;27.1.12297006"

      - name: Enable Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Restore keystore from secret
        run: |
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      - name: Export signing env
        run: |
          echo "ANDROID_KEYSTORE_PATH=$GITHUB_WORKSPACE/android/app/release.keystore" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "ANDROID_SIGNING_KEY_ALIAS=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "ANDROID_SIGNING_KEY_PASSWORD=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Compute version
        id: ver
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            NAME="${TAG#v}"
            BASE="${NAME%%-*}"
            IFS='.' read -r MA MI PA <<< "$BASE"
            CODE=$(printf "%d%02d%02d\n" "$MA" "$MI" "$PA")
            CODE=$((CODE*100 + ${{ github.run_number }} % 100))
          else
            NAME="0.1.${{ github.run_number }}"
            CODE=$((10000 + $GITHUB_RUN_NUMBER))
          fi
          echo "VERSION_NAME=$NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$CODE" >> $GITHUB_ENV
          echo "version_name=$NAME" >> $GITHUB_OUTPUT
          echo "version_code=$CODE" >> $GITHUB_OUTPUT
          echo "Computed VERSION_NAME=$NAME, VERSION_CODE=$CODE"

      - name: Make gradlew executable
        working-directory: android
        run: chmod +x gradlew

      - name: Build Android (release APK)
        working-directory: android
        run: ./gradlew --no-daemon clean assembleRelease -PVERSION_CODE=$VERSION_CODE -PVERSION_NAME=$VERSION_NAME --stacktrace --info

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ steps.ver.outputs.version_name }}-${{ steps.ver.outputs.version_code }}
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 14
