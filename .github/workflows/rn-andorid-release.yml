name: RN Android Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_strategy:
        description: "버전 전략(tag|run)"
        required: false
        default: "tag"
      release_notes:
        description: "릴리즈 노트"
        required: false
        default: "Automated release build"

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency:
      group: rn-release-${{ github.ref }}
      cancel-in-progress: true

    env:
      JAVA_TOOL_OPTIONS: -Xmx3g
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8" -Dorg.gradle.daemon=false

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install JS deps (root)
        run: npm ci

      - name: Print tree (root)
        run: |
          pwd
          ls -la
          node -v
          npm -v

      - name: Verify RN gradle plugin exists
        run: |
          test -d node_modules/@react-native/gradle-plugin
          ls -la node_modules/@react-native/gradle-plugin

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # cmdline-tools만 설치/업데이트 (패키지는 아래에서 직접 설치)
      - name: Setup Android SDK (base)
        uses: android-actions/setup-android@v3

      # ✅ 패키지 직접 설치 (줄바꿈/인자 병합 이슈 회피)
      - name: Install Android SDK packages
        shell: bash
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0" "ndk;27.1.12297006"
          sdkmanager --list | sed -n '1,200p'

      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Restore keystore from secret
        run: |
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      - name: Export signing env
        run: |
          echo "ANDROID_KEYSTORE_PATH=$GITHUB_WORKSPACE/android/app/release.keystore" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "ANDROID_SIGNING_KEY_ALIAS=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "ANDROID_SIGNING_KEY_PASSWORD=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Compute version
        id: ver
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            NAME="${TAG#v}"
            BASE="${NAME%%-*}"
            IFS='.' read -r MA MI PA <<< "$BASE"
            CODE=$(printf "%d%02d%02d\n" "$MA" "$MI" "$PA")
            CODE=$((CODE*100 + ${{ github.run_number }} % 100))
          else
            NAME="0.1.${{ github.run_number }}"
            CODE=$((10000 + $GITHUB_RUN_NUMBER))
          fi
          echo "VERSION_NAME=$NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$CODE" >> $GITHUB_ENV
          echo "version_name=$NAME" >> $GITHUB_OUTPUT
          echo "version_code=$CODE" >> $GITHUB_OUTPUT
          echo "Computed VERSION_NAME=$NAME, VERSION_CODE=$CODE"

      - name: Make gradlew executable
        working-directory: android
        run: chmod +x gradlew

      # 🔍 실제 러너가 읽는 파일/속성 확인
      - name: Print app/build.gradle on runner
        run: |
          echo "===== android/app/build.gradle ====="
          sed -n '1,200p' android/app/build.gradle

      - name: Print :app properties
        working-directory: android
        run: ./gradlew -q :app:properties || true

      - name: Prepare autolinking dir
        run: mkdir -p android/build/generated/autolinking

      - name: Build Android (release APK)
        working-directory: android
        run: |
          ./gradlew --stop
          ./gradlew --no-configuration-cache --refresh-dependencies clean assembleRelease \
            -PVERSION_CODE=$VERSION_CODE -PVERSION_NAME=$VERSION_NAME \
            --stacktrace --warning-mode all

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ steps.ver.outputs.version_name }}-${{ steps.ver.outputs.version_code }}
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 14
