name: RN Android CI

on:
  pull_request:
    branches: [ main, dev ]
    paths:
      - "android/**"
      - "app/**"
      - "src/**"
      - "package.json"
      - "yarn.lock"
      - "package-lock.json"
  push:
    branches: [ dev ]
    paths:
      - "android/**"
      - "app/**"
      - "src/**"
      - "package.json"
      - "yarn.lock"
      - "package-lock.json"

jobs:
  ci:
    runs-on: ubuntu-latest
    concurrency:
      group: rn-ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: gradle/wrapper-validation-action@v2

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Type check
        run: npm run typecheck --if-present

      - name: Lint
        run: npm run lint --if-present

      - name: Unit test
        run: npm test --if-present -- --ci

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # SDK만 세팅
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 필요한 패키지 직접 설치 (CI는 NDK 보통 불필요)
      - name: Accept licenses and install SDK packages
        shell: bash
        run: |
          set -euo pipefail
          yes | "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" --install \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0"

      - name: Enable Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        working-directory: android
        run: chmod +x gradlew

      # clean만 먼저
      - name: Gradle clean
        working-directory: android
        run: ./gradlew --no-daemon clean

      # clean 이후 autolinking.json 생성
      - name: Generate autolinking.json (RN CLI)
        run: |
          set -euo pipefail
          mkdir -p android/build/generated/autolinking
          npx --yes react-native config > android/build/generated/autolinking/autolinking.json
          test -s android/build/generated/autolinking/autolinking.json
          echo "autolinking.json generated"
          ls -la android/build/generated/autolinking
          head -n 3 android/build/generated/autolinking/autolinking.json || true

      # assemble만
      - name: Build Android (debug)
        working-directory: android
        run: ./gradlew --no-daemon assembleDebug

      - name: Upload debug APK
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 7
